@custom-variant starting (@starting-style);
@custom-variant hover {
    @media (hover: hover) {
        &:hover {
            @slot;
        }
    }
}

@custom-variant dark {
    @media (prefers-color-scheme: dark) {
        @slot;
    }
}

@custom-variant not-dark {
    @media (not (prefers-color-scheme: dark)) {
        @slot;
    }
}

@custom-variant active (&:active);
@custom-variant focus (&:focus);
@custom-variant focus-visible (&:focus-visible);
@custom-variant focus-within (&:focus-withhin);
@custom-variant target-current (&:target-current);

@utility @container {
    container-type: inline-size;
}

@utility aspect-square {
    aspect-ratio: 1 / 1;
}
@utility aspect-auto {
    aspect-ratio: auto;
}
@utility aspect-* {
    aspect-ratio: --value(--aspect-*, ratio, [*]);
}

@utility columns-* {
    columns: --value(--container-*, number);
}
@utility columns-auto {
    columns: auto;
}

@utility break-after-auto {
    break-after: auto;
}
@utility break-after-avoid {
    break-after: avoid;
}
@utility break-after-all {
    break-after: all;
}
@utility break-after-avoid-page {
    break-after: avoid-page;
}
@utility break-after-page {
    break-after: page;
}
@utility break-after-left {
    break-after: left;
}
@utility break-after-right {
    break-after: right;
}
@utility break-after-column {
    break-after: column;
}

@utility break-before-auto {
    break-before: auto;
}
@utility break-before-avoid {
    break-before: avoid;
}
@utility break-before-all {
    break-before: all;
}
@utility break-before-avoid-page {
    break-before: avoid-page;
}
@utility break-before-page {
    break-before: page;
}
@utility break-before-left {
    break-before: left;
}
@utility break-before-right {
    break-before: right;
}
@utility break-before-column {
    break-before: column;
}

@utility break-inside-auto {
    break-inside: auto;
}
@utility break-inside-avoid {
    break-inside: avoid;
}
@utility break-inside-avoid-page {
    break-inside: avoid-page;
}
@utility break-inside-avoid-column {
    break-inside: avoid-column;
}

@utility box-decoration-clone {
    box-decoration-break: clone;
}
@utility box-decoration-slice {
    box-decoration-break: slice;
}

@utility box-border {
    box-sizing: border-box;
}
@utility box-content {
    box-sizing: content-box;
}

@utility inline {
    display: inline;
}
@utility block {
    display: block;
}
@utility inline-block {
    display: inline-block;
}
@utility flow-root {
    display: flow-root;
}
@utility flex {
    display: flex;
}
@utility inline-flex {
    display: inline-flex;
}
@utility grid {
    display: grid;
}
@utility inline-grid {
    display: inline-grid;
}
@utility contents {
    display: contents;
}
@utility table {
    display: table;
}
@utility inline-table {
    display: inline-table;
}
@utility table-caption {
    display: table-caption;
}
@utility table-cell {
    display: table-cell;
}
@utility table-column {
    display: table-column;
}
@utility table-column-group {
    display: table-column-group;
}
@utility table-footer-group {
    display: table-footer-group;
}
@utility table-header-group {
    display: table-header-group;
}
@utility table-row-group {
    display: table-row-group;
}
@utility table-row {
    display: table-row;
}
@utility list-item {
    display: list-item;
}
@utility hidden {
    display: none;
}
@utility sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}
@utility not-sr-only {
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
}

@utility float-right {
    float: right;
}
@utility float-left {
    float: left;
}
@utility float-start {
    float: inline-start;
}
@utility float-end {
    float: inline-start;
}
@utility float-none {
    float: none;
}

@utility clear-left {
    clear: left;
}
@utility clear-right {
    clear: right;
}
@utility clear-both {
    clear: both;
}
@utility clear-start {
    clear: inline-start;
}
@utility clear-end {
    clear: inline-end;
}
@utility clear-none {
    clear: none;
}

@utility isolate {
    isolation: isolate;
}
@utility isolation-auto {
    isolation: auto;
}

@utility object-contain {
    object-fit: contain;
}
@utility object-cover {
    object-fit: cover;
}
@utility object-fill {
    object-fit: fill;
}
@utility object-none {
    object-fit: none;
}
@utility object-scale-down {
    object-fit: scale-down;
}

@utility object-top-left {
    object-position: top left;
}
@utility object-top {
    object-position: top;
}
@utility object-top-right {
    object-position: top right;
}
@utility object-left {
    object-position: left;
}
@utility object-center {
    object-position: center;
}
@utility object-right {
    object-position: right;
}
@utility object-bottom-left {
    object-position: bottom left;
}
@utility object-bottom {
    object-position: bottom;
}
@utility object-bottom-right {
    object-position: bottom right;
}
@utility object-* {
    object-position: --value(position);
}

@utility overflow-auto {
    overflow: auto;
}
@utility overflow-hidden {
    overflow: hidden;
}
@utility overflow-clip {
    overflow: clip;
}
@utility overflow-visible {
    overflow: visible;
}
@utility overflow-scroll {
    overflow: scroll;
}
@utility overflow-x-auto {
    overflow-x: auto;
}
@utility overflow-y-auto {
    overflow-y: auto;
}
@utility overflow-x-clip {
    overflow-x: clip;
}
@utility overflow-y-clip {
    overflow-y: clip;
}
@utility overflow-x-visible {
    overflow-x: visible;
}
@utility overflow-y-visible {
    overflow-y: visible;
}
@utility overflow-x-scroll {
    overflow-x: scroll;
}
@utility overflow-y-scroll {
    overflow-y: scroll;
}

@utility overscroll-auto {
    overscroll-behavior: auto;
}
@utility overscroll-contain {
    overscroll-behavior: contain;
}
@utility overscroll-none {
    overscroll-behavior: none;
}
@utility overscroll-x-auto {
    overscroll-behavior-x: auto;
}
@utility overscroll-x-contain {
    overscroll-behavior-x: contain;
}
@utility overscroll-x-none {
    overscroll-behavior-x: none;
}
@utility overscroll-y-auto {
    overscroll-behavior-y: auto;
}
@utility overscroll-y-contain {
    overscroll-behavior-y: contain;
}
@utility overscroll-y-none {
    overscroll-behavior-y: none;
}

@utility static {
    position: static;
}
@utility fixed {
    position: fixed;
}
@utility absolute {
    position: absolute;
}
@utility relative {
    position: relative;
}
@utility sticky {
    position: sticky;
}

@utility inset-* {
    inset: calc(var(--spacing) * --value(number));
    inset: calc(--value(ratio) * 100%);
    inset: --value([*]);
}
@utility -inset-* {
    inset: calc(var(--spacing) * ---value(number));
    inset: calc(--value(ratio) * -100%);
}
@utility inset-px {
    inset: 1px;
}
@utility -inset-px {
    inset: -1px;
}
@utility inset-full {
    inset: 100%;
}
@utility -inset-full {
    inset: -100%;
}
@utility inset-auto {
    inset: auto;
}
@utility inset-x-* {
    inset-inline: calc(var(--spacing) * --value(number));
    inset-inline: calc(--value(ratio) * 100%);
    inset-inline: --value([*]);
}
@utility -inset-x-* {
    inset-inline: calc(var(--spacing) * ---value(number));
    inset-inline: calc(--value(ratio) * -100%);
}
@utility inset-x-px {
    inset-inline: 1px;
}
@utility -inset-x-px {
    inset-inline: -1px;
}
@utility inset-x-full {
    inset-inline: 100%;
}
@utility -inset-x-full {
    inset-inline: -100%;
}
@utility inset-x-auto {
    inset-inline: auto;
}
@utility inset-y-* {
    inset-block: calc(var(--spacing) * --value(number));
    inset-block: calc(--value(ratio) * 100%);
    inset-block: --value([*]);
}
@utility -inset-y-* {
    inset-block: calc(var(--spacing) * ---value(number));
    inset-block: calc(--value(ratio) * -100%);
}
@utility inset-y-px {
    inset-block: 1px;
}
@utility -inset-y-px {
    inset-block: -1px;
}
@utility inset-y-full {
    inset-block: 100%;
}
@utility -inset-y-full {
    inset-block: -100%;
}
@utility inset-y-auto {
    inset-block: auto;
}
@utility start-* {
    inset-inline-start: calc(var(--spacing) * --value(number));
    inset-inline-start: calc(--value(ratio) * 100%);
    inset-inline-start: --value([*]);
}
@utility -start-* {
    inset-inline-start: calc(var(--spacing) * ---value(number));
    inset-inline-start: calc(--value(ratio) * -100%);
}
@utility start-px {
    inset-inline-start: 1px;
}
@utility -start-px {
    inset-inline-start: -1px;
}
@utility start-full {
    inset-inline-start: 100%;
}
@utility -start-full {
    inset-inline-start: -100%;
}
@utility start-auto {
    inset-inline-start: auto;
}
@utility end-* {
    inset-inline-end: calc(var(--spacing) * --value(number));
    inset-inline-end: calc(--value(ratio) * 100%);
    inset-inline-end: --value([*]);
}
@utility -end-* {
    inset-inline-end: calc(var(--spacing) * ---value(number));
    inset-inline-end: calc(--value(ratio) * -100%);
}
@utility end-px {
    inset-inline-end: 1px;
}
@utility -end-px {
    inset-inline-end: -1px;
}
@utility end-full {
    inset-inline-end: 100%;
}
@utility -end-full {
    inset-inline-end: -100%;
}
@utility end-auto {
    inset-inline-end: auto;
}
@utility top-* {
    top: calc(var(--spacing) * --value(number));
    top: calc(--value(ratio) * 100%);
    top: --value([*]);
}
@utility -top-* {
    top: calc(var(--spacing) * ---value(number));
    top: calc(--value(ratio) * -100%);
}
@utility top-px {
    top: 1px;
}
@utility -top-px {
    top: -1px;
}
@utility top-full {
    top: 100%;
}
@utility -top-full {
    top: -100%;
}
@utility top-auto {
    top: auto;
}
@utility left-* {
    left: calc(var(--spacing) * --value(number));
    left: calc(--value(ratio) * 100%);
    left: --value([*]);
}
@utility -left-* {
    left: calc(var(--spacing) * ---value(number));
    left: calc(--value(ratio) * -100%);
}
@utility left-px {
    left: 1px;
}
@utility -left-px {
    left: -1px;
}
@utility left-full {
    left: 100%;
}
@utility -left-full {
    left: -100%;
}
@utility left-auto {
    left: auto;
}
@utility right-* {
    right: calc(var(--spacing) * --value(number));
    right: calc(--value(ratio) * 100%);
    right: --value([*]);
}
@utility -right-* {
    right: calc(var(--spacing) * ---value(number));
    right: calc(--value(ratio) * -100%);
}
@utility right-px {
    right: 1px;
}
@utility -right-px {
    right: -1px;
}
@utility right-full {
    right: 100%;
}
@utility -right-full {
    right: -100%;
}
@utility right-auto {
    right: auto;
}
@utility bottom-* {
    bottom: calc(var(--spacing) * --value(number));
    bottom: calc(--value(ratio) * 100%);
    bottom: --value([*]);
}
@utility -bottom-* {
    bottom: calc(var(--spacing) * ---value(number));
    bottom: calc(--value(ratio) * -100%);
}
@utility bottom-px {
    bottom: 1px;
}
@utility -bottom-px {
    bottom: -1px;
}
@utility bottom-full {
    bottom: 100%;
}
@utility -bottom-full {
    bottom: -100%;
}
@utility bottom-auto {
    bottom: auto;
}

@utility visible {
    visibility: visible;
}
@utility invisible {
    visibility: hidden;
}
@utility collapse {
    visibility: collapse;
}

@utility z-* {
    z-index: --value(number, "auto", [*]);
}

@utility -z-* {
    z-index: ---value(number);
}

@utility basis-* {
    flex-basis: calc(var(--spacing) * --value(number));
    flex-basis: calc(--value(ratio) * 100%);
}
@utility basis-full {
    flex-basis: 100%;
}
@utility basis-* {
    flex-basis: --value("auto", --container-*);
}

@utility flex-row {
    flex-direction: row;
}
@utility flex-row-reverse {
    flex-direction: row-reverse;
}
@utility flex-col {
    flex-direction: column;
}
@utility flex-col-reverse {
    flex-direction: column-reverse;
}

@utility flex-nowrap {
    flex-wrap: nowrap;
}
@utility flex-wrap {
    flex-wrap: wrap;
}
@utility flex-wrap-reverse {
    flex-wrap: wrap-reverse;
}

@utility flex-* {
    flex: --value(number, "auto", "none", [*]);
    flex: calc(--value(ratio) * 100%);
}
@utility flex-initial {
    flex-initial: 0 auto;
}

@utility grow {
    flex-grow: 1;
}
@utility grow-* {
    flex-grow: --value(number);
}

@utility shrink {
    flex-shrink: 1;
}
@utility shrink-* {
    flex-shrink: --value(number);
}

@utility order-* {
    order: --value(number);
}
@utility -order-* {
    order: calc(--value(number) * -1);
}
@utility order-first {
    order: -9999;
}
@utility order-last {
    order: 9999;
}
@utility order-none {
    order: 0;
}

@utility grid-cols-* {
    grid-template-columns: repeat(--value(number), minmax(0, 1fr));
    grid-template-columns: --value("none", "subgrid", [*]);
}

@utility col-span-* {
    grid-column: span --value(number, [*]) / span --value(number, [*]);
}
@utility col-span-full {
    grid-column: 1 / -1;
}
@utility col-start-* {
    grid-column-start: --value(number, "auto", [*]);
}
@utility -col-start-* {
    grid-column-start: calc(--value(number) * -1);
}
@utility col-end-* {
    grid-column-end: --value(number, "auto", [*]);
}
@utility -col-end-* {
    grid-column-end: calc(--value(number) * -1);
}
@utility col-* {
    grid-column: --value(number, "auto", [*]);
}
@utility -col* {
    grid-column: calc(--value(number) * -1);
}

@utility grid-rows-* {
    grid-template-rows: repeat(--value(number), minmax(0, 1fr));
    grid-template-rows: --value("none", "subgrid", [*]);
}

@utility row-span-* {
    grid-row: span --value(number, [*]) / --value(number, [*]);
}
@utility row-span-full {
    grid-row: 1 / -1;
}
@utility row-start-* {
    grid-row-start: --value(number, "auto", [*]);
}
@utility -row-start-* {
    grid-row-start: calc(--value(number) * -1);
}
@utility row-end-* {
    grid-row-end: --value(number, "auto", [*]);
}
@utility -row-end-* {
    grid-row-end: calc(--value(number) * -1);
}
@utility row-* {
    grid-row: --value(number, "auto", [*]);
}
@utility -row-* {
    grid-row: calc(--value(number) * -1);
}

@utility grid-flow-row {
    grid-auto-flow: row;
}
@utility grid-flow-col {
    grid-auto-flow: column;
}
@utility grid-flow-dense {
    grid-auto-flow: dense;
}
@utility grid-flow-row-dense {
    grid-auto-flow: row dense;
}
@utility grid-flow-col-dense {
    grid-auto-flow: column dense;
}

@utility auto-cols-auto {
    grid-auto-columns: auto;
}
@utility auto-cols-min {
    grid-auto-columns: min-content;
}
@utility auto-cols-max {
    grid-auto-columns: max-content;
}
@utility auto-cols-fr {
    grid-auto-columns: minmax(0, 1fr);
}
@utility auto-cols-* {
    grid-auto-columns: --value([*]);
}

@utility auto-rows-auto {
    grid-auto-rows: auto;
}
@utility auto-rows-min {
    grid-auto-rows: min-content;
}
@utility auto-rows-max {
    grid-auto-rows: max-content;
}
@utility auto-rows-fr {
    grid-auto-rows: minmax(0, 1fr);
}
@utility auto-rows-* {
    grid-auto-rows: --value([*]);
}

@utility gap-* {
    gap: calc(var(--spacing) * --value(number));
    gap: --value([*]);
}
@utility gap-x-* {
    column-gap: calc(var(--spacing) * --value(number));
    column-gap: --value([*]);
}
@utility gap-y-* {
    row-gap: calc(var(--spacing) * --value(number));
    row-gap: --value([*]);
}

@utility justify-start {
    justify-content: flex-start;
}
@utility justify-end {
    justify-content: flex-end;
}
@utility justify-end-safe {
    justify-content: safe flex-end;
}
@utility justify-center {
    justify-content: center;
}
@utility justify-center-safe {
    justify-content: safe center;
}
@utility justify-between {
    justify-content: space-between;
}
@utility justify-around {
    justify-content: space-around;
}
@utility justify-evenly {
    justify-content: space-evenly;
}
@utility justify-stretch {
    justify-content: stretch;
}
@utility justify-baseline {
    justify-content: baseline;
}
@utility justify-normal {
    justify-content: normal;
}

@utility justify-items-start {
    justify-items: start;
}
@utility justify-items-end {
    justify-items: end;
}
@utility justify-items-end-safe {
    justify-items: safe end;
}
@utility justify-items-center {
    justify-items: center;
}
@utility justify-items-center-safe {
    justify-items: safe center;
}
@utility justify-items-stretch {
    justify-items: stretch;
}
@utility justify-items-normal {
    justify-items: normal;
}

@utility justify-self-auto {
    justify-self: auto;
}
@utility justify-self-start {
    justify-self: start;
}
@utility justify-self-center {
    justify-self: center;
}
@utility justify-self-center-safe {
    justify-self: safe center;
}
@utility justify-self-end {
    justify-self: end;
}
@utility justify-self-end-safe {
    justify-self: safe end;
}
@utility justify-self-stretch {
    justify-self: stretch;
}

@utility content-normal {
    align-content: normal;
}
@utility content-center {
    align-content: center;
}
@utility content-start {
    align-content: flex-start;
}
@utility content-end {
    align-content: flex-end;
}
@utility conetent-between {
    align-content: space-between;
}
@utility conetent-around {
    align-content: space-around;
}
@utility conetent-evenly {
    align-content: space-evenly;
}
@utility conetent-baseline {
    align-content: baseline;
}
@utility conetent-stretch {
    align-content: stretch;
}

@utility items-start {
    align-items: flex-start;
}
@utility items-end {
    align-items: flex-end;
}
@utility items-end-safe {
    align-items: safe flex-end;
}
@utility items-center {
    align-items: center;
}
@utility items-center-safe {
    align-items: safe center;
}
@utility items-baseline {
    align-items: baseline;
}
@utility items-baseline-last {
    align-items: last baseline;
}
@utility items-stretch {
    align-items: stretch;
}

@utility self-auto {
    align-self: auto;
}
@utility self-start {
    align-self: flex-start;
}
@utility self-end {
    align-self: flex-end;
}
@utility self-end-safe {
    align-self: safe flex-end;
}
@utility self-center {
    align-self: center;
}
@utility self-center-safe {
    align-self: safe center;
}
@utility self-stretch {
    align-self: stretch;
}
@utility self-baseline {
    align-self: baseline;
}
@utility self-baseline-last {
    align-self: last baseline;
}

@utility place-content-center {
    place-content: center;
}
@utility place-content-center-safe {
    place-content: safe center;
}
@utility place-content-start {
    place-content: start;
}
@utility place-content-end {
    place-content: end;
}
@utility place-content-end-safe {
    place-content: safe end;
}
@utility place-content-between {
    place-content: space-between;
}
@utility place-content-around {
    place-content: space-around;
}
@utility place-content-evenly {
    place-content: space-evenly;
}
@utility place-content-baseline {
    place-content: baseline;
}
@utility place-content-stretch {
    place-content: stretch;
}

@utility place-items-start {
    place-items: start;
}
@utility place-items-end {
    place-items: end;
}
@utility place-items-end-safe {
    place-items: safe end;
}
@utility place-items-center {
    place-items: center;
}
@utility place-items-center-safe {
    place-items: safe center;
}
@utility place-items-baseline {
    place-items: baseline;
}
@utility place-items-stretch {
    place-items: stretch;
}

@utility place-self-auto {
    place-self: auto;
}
@utility place-self-start {
    place-self: start;
}
@utility place-self-end {
    place-self: end;
}
@utility place-self-end-safe {
    place-self: safe end;
}
@utility place-self-center {
    place-self: center;
}
@utility place-self-center-safe {
    place-self: safe center;
}
@utility place-self-stretch {
    place-self: stretch;
}

@utility p-* {
    padding: calc(var(--spacing) * --value(number));
    padding: --value([*]);
}
@utility p-px {
    padding: 1px;
}
@utility px-* {
    padding-inline: calc(var(--spacing) * --value(number));
    padding-inline: --value([*]);
}
@utility px-px {
    padding-inline: 1px;
}
@utility py-* {
    padding-block: calc(var(--spacing) * --value(number));
    padding-block: --value([*]);
}
@utility py-px {
    padding-block: 1px;
}
@utility ps-* {
    padding-inline-start: calc(var(--spacing) * --value(number));
    padding-inline-start: --value([*]);
}
@utility ps-px {
    padding-inline-start: 1px;
}
@utility pe-* {
    padding-inline-end: calc(var(--spacing) * --value(number));
    padding-inline-end: --value([*]);
}
@utility pe-px {
    padding-inline-end: 1px;
}
@utility pt-* {
    padding-top: calc(var(--spacing) * --value(number));
    padding-top: --value([*]);
}
@utility pt-px {
    padding-top: 1px;
}
@utility pr-* {
    padding-right: calc(var(--spacing) * --value(number));
    padding-right: --value([*]);
}
@utility pr-px {
    padding-right: 1px;
}
@utility pb-* {
    padding-bottom: calc(var(--spacing) * --value(number));
    padding-bottom: --value([*]);
}
@utility pb-px {
    padding-bottom: 1px;
}
@utility pl-* {
    padding-left: calc(var(--spacing) * --value(number));
    padding-left: --value([*]);
}
@utility pl-px {
    padding-left: 1px;
}

@utility m-* {
    margin: calc(var(--spacing) * --value(number));
    margin: --value("auto");
    margin: --value([*]);
}
@utility -m-* {
    margin: calc(var(--spacing) * ---value(number));
}
@utility m-px {
    margin: 1px;
}
@utility -m-px {
    margin: -1px;
}
@utility mx-* {
    margin-inline: calc(var(--spacing) * --value(number));
    margin-inline: --value("auto");
    margin-inline: --value([*]);
}
@utility -mx-* {
    margin-inline: calc(var(--spacing) * ---value(number));
}
@utility mx-px {
    margin-inline: 1px;
}
@utility -mx-px {
    margin-inline: 1px;
}
@utility my-* {
    margin-block: calc(var(--spacing) * --value(number));
    margin-block: --value("auto");
    margin-block: --value([*]);
}
@utility -my-* {
    margin-block: calc(var(--spacing) * ---value(number));
}
@utility my-px {
    margin-block: 1px;
}
@utility -my-px {
    margin-block: -1px;
}
@utility ms-* {
    margin-inline-start: calc(var(--spacing) * --value(number));
    margin-inline-start: --value("auto");
    margin-inline-start: --value([*]);
}
@utility -ms-* {
    margin-inline-start: calc(var(--spacing) * ---value(number));
}
@utility ms-px {
    margin-inline-start: 1px;
}
@utility -ms-px {
    margin-inline-start: -1px;
}
@utility me-* {
    margin-inline-end: calc(var(--spacing) * --value(number));
    margin-inline-end: --value("auto");
    margin-inline-end: --value([*]);
}
@utility -me-* {
    margin-inline-end: calc(var(--spacing) * ---value(number));
}
@utility me-px {
    margin-inline-end: 1px;
}
@utility -me-px {
    margin-inline-end: -1px;
}
@utility mt-* {
    margin-top: calc(var(--spacing) * --value(number));
    margin-top: --value("auto");
    margin-top: --value([*]);
}
@utility -mt-* {
    margin-top: calc(var(--spacing) * ---value(number));
}
@utility mt-px {
    margin-top: 1px;
}
@utility -mt-px {
    margin-top: -1px;
}
@utility mr-* {
    margin-right: calc(var(--spacing) * --value(number));
    margin-right: --value("auto");
    margin-right: --value([*]);
}
@utility -mr-* {
    margin-right: calc(var(--spacing) * ---value(number));
}
@utility mr-px {
    margin-right: 1px;
}
@utility -mr-px {
    margin-right: -1px;
}
@utility mb-* {
    margin-bottom: calc(var(--spacing) * --value(number));
    margin-bottom: --value("auto");
    margin-bottom: --value([*]);
}
@utility -mb-* {
    margin-bottom: calc(var(--spacing) * ---value(number));
}
@utility mb-px {
    margin-bottom: 1px;
}
@utility -mb-px {
    margin-bottom: -1px;
}
@utility ml-* {
    margin-left: calc(var(--spacing) * --value(number));
    margin-left: --value("auto");
    margin-left: --value([*]);
}
@utility -ml-* {
    margin-left: calc(var(--spacing) * ---value(number));
}
@utility ml-px {
    margin-left: 1px;
}
@utility -ml-px {
    margin-left: -1px;
}

@utility space-x-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-inline-start: calc( calc(var(--spacing) * --value(number)) * var(--tw-space-x-reverse) ); margin-inline-end: calc( calc(var(--spacing) * --value(number)) * calc(1 - var(--tw-space-x-reverse)) ); }
}
@utility space-x-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-inline-start: calc(--value([*]) * var(--tw-space-x-reverse)); margin-inline-end: calc( --value([*]) * calc(1 - var(--tw-space-x-reverse)) ); }
}
@utility -space-x-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-inline-start: calc( calc(var(--spacing) * ---value(number)) * var(--tw-space-x-reverse) ); margin-inline-end: calc( calc(var(--spacing) * ---value(number)) * calc(1 - var(--tw-space-x-reverse)) ); }
}
@utility space-x-px {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-inline-start: calc(1px * var(--tw-space-x-reverse)); margin-inline-end: calc(1px * calc(1 - var(--tw-space-x-reverse))); }
}
@utility -space-x-px {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-inline-start: calc(-1px * var(--tw-space-x-reverse)); margin-inline-end: calc(1px * calc(1 - var(--tw-space-x-reverse))); }
}

@utility space-y-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-block-start: calc( calc(var(--spacing) * --value(number)) * var(--tw-space-x-reverse) ); margin-block-end: calc( calc(var(--spacing) * --value(number)) * calc(1 - var(--tw-space-x-reverse)) ); }
}
@utility space-y-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-block-start: calc(--value([*]) * var(--tw-space-x-reverse)); margin-block-end: calc( --value([*]) * calc(1 - var(--tw-space-x-reverse)) ); }
}
@utility -space-y-* {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-block-start: calc( calc(var(--spacing) * ---value(number)) * var(--tw-space-x-reverse) ); margin-block-end: calc( calc(var(--spacing) * ---value(number)) * (1 - var(--tw-space-x-reverse))); }
}
@utility space-y-px {
    & > :not(:last-child) { --tw-space-x-reverse: 0; margin-block-start: calc(1px * var(--tw-space-x-reverse)); margin-block-end: calc(1px * calc(1 - var(--tw-space-x-reverse))); }
}
@utility -space-y-px {
    & > :not(:last-child) {
        --tw-space-x-reverse: 0;
        margin-block-start: calc(-1px * var(--tw-space-x-reverse));
        margin-block-end: calc(1px * calc(1 - var(--tw-space-x-reverse)));
    }
}

@utility space-x-reverse {
    & > :not(:last-child) {
        --tw-space-x-reverse: 1;
    }
}
@utility space-y-reverse {
    & > :not(:last-child) {
        --tw-space-y-reverse: 1;
    }
}

@utility w-* {
    width: calc(var(--spacing) * --value(number));
    width: calc(--value(ratio) * 100%);
    width: --value([*]);
    width: --value("auto", --container-*);
}
@utility w-px {
    width: 1px;
}
@utility w-full {
    width: 100%;
}
@utility w-screen {
    width: 100vw;
}
@utility w-dvw {
    width: 100dvw;
}
@utility w-dvh {
    width: 100dvh;
}
@utility w-lvw {
    width: 100lvw;
}
@utility w-lvh {
    width: 100lvh;
}
@utility w-svw {
    width: 100svw;
}
@utility w-svh {
    width: 100svh;
}
@utility w-min {
    width: min-content;
}
@utility w-max {
    width: max-content;
}
@utility w-fit {
    width: fit-content;
}

@utility size-* {
    width: calc(var(--spacing) * --value(number)); heigth: calc(var(--spacing) * --value(number));
    width: calc(--value(ratio) * 100%); heigth: calc(--value(ratio) * 100%);
    width: --value([*]); height: --value([*]);
}
@utility size-auto {
    width: auto;
    height: auto;
}
@utility size-px {
    width: 1px;
    height: 1px;
}
@utility size-full {
    width: 100%;
    height: 100%;
}
@utility size-dvw {
    width: 100dvw;
    height: 100dvw;
}
@utility size-dvh {
    width: 100dvh;
    height: 100dvh;
}
@utility size-lvw {
    width: 100lvw;
    height: 100lvw;
}
@utility size-lvh {
    width: 100lvh;
    height: 100lvh;
}
@utility size-svw {
    width: 100svw;
    height: 100svw;
}
@utility size-svh {
    width: 100svh;
    height: 100svh;
}
@utility size-min {
    width: min-content;
    height: min-content;
}
@utility size-max {
    width: max-content;
    height: max-content;
}
@utility size-fit {
    width: fit-content;
    height: fit-content;
}

@utility min-w-* {
    min-width: calc(var(--spacing) * --value(number));
    min-width: calc(--value(ratio) * 100%);
    min-width: --value("auto", --container-*, [*]);
}
@utility min-w-px {
    min-width: 1px;
}
@utility min-w-full {
    min-width: 100%;
}
@utility min-w-screen {
    min-width: 100vw;
}
@utility min-w-dvw {
    min-width: 100dvw;
}
@utility min-w-dvh {
    min-width: 100dvh;
}
@utility min-w-lvw {
    min-width: 100lvw;
}
@utility min-w-lvh {
    min-width: 100lvw;
}
@utility min-w-svw {
    min-width: 100svw;
}
@utility min-w-svh {
    min-width: 100svh;
}
@utility min-w-min {
    min-width: min-content;
}
@utility min-w-max {
    min-width: max-content;
}
@utility min-w-fit {
    min-width: fit-content;
}

@utility max-w-* {
    max-width: calc(var(--spacing) * --value(number));
    max-width: calc(--value(ratio) * 100%);
    max-width: --value("auto", --container-*, [*]);
}
@utility max-w-px {
    max-width: 1px;
}
@utility max-w-full {
    max-width: 100%;
}
@utility max-w-screen {
    max-width: 100vw;
}
@utility max-w-dvw {
    max-width: 100dvw;
}
@utility max-w-dvh {
    max-width: 100dvh;
}
@utility max-w-lvw {
    max-width: 100lvw;
}
@utility max-w-lvh {
    max-width: 100lvw;
}
@utility max-w-svw {
    max-width: 100svw;
}
@utility max-w-svh {
    max-width: 100svh;
}
@utility max-w-min {
    max-width: min-content;
}
@utility max-w-max {
    max-width: max-content;
}
@utility max-w-fit {
    max-width: fit-content;
}
@utility container {
    width: 100%;
    @media (width >= 40rem) {
        max-width: 40rem;
    }
    @media (width >= 48rem) {
        max-width: 48rem;
    }
    @media (width >= 64rem) {
        max-width: 64rem;
    }
    @media (width >= 80rem) {
        max-width: 80rem;
    }
    @media (width >= 96rem) {
        max-width: 96rem;
    }
}

@utility h-* {
    height: calc(var(--spacing) * --value(number));
    height: calc(--value(ratio) * 100%);
    height: --value("auto", --container-*, [*]);
}
@utility h-px {
    height: 1px;
}
@utility h-full {
    height: 100%;
}
@utility h-screen {
    height: 100vw;
}
@utility h-dvw {
    height: 100dvw;
}
@utility h-dvh {
    height: 100dvh;
}
@utility h-lvw {
    height: 100lvw;
}
@utility h-lvh {
    height: 100lvh;
}
@utility h-svw {
    height: 100svw;
}
@utility h-svh {
    height: 100svh;
}
@utility h-min {
    height: min-content;
}
@utility h-max {
    height: max-content;
}
@utility h-fit {
    height: fit-content;
}
@utility h-lh {
    height: 1lh;
}

@utility min-h-* {
    min-height: calc(var(--spacing) * --value(number));
    min-height: calc(--value(ratio) * 100%);
    min-height: --value("auto", --container-*, [*]);
}
@utility min-h-px {
    min-height: 1px;
}
@utility min-h-full {
    min-height: 100%;
}
@utility min-h-screen {
    min-height: 100vh;
}
@utility min-h-dvh {
    min-height: 100dvh;
}
@utility min-h-dvw {
    min-height: 100dvw;
}
@utility min-h-lvh {
    min-height: 100lvh;
}
@utility min-h-lvw {
    min-height: 100lvw;
}
@utility min-h-svw {
    min-height: 100svw;
}
@utility min-h-svh {
    min-height: 100svh;
}
@utility min-h-auto {
    min-height: auto;
}
@utility min-h-min {
    min-height: min-content;
}
@utility min-h-max {
    min-height: max-content;
}
@utility min-h-fit {
    min-height: fit-content;
}
@utility min-h-lh {
    min-height: 1lh;
}

@utility max-h-* {
    max-height: calc(var(--spacing) * --value(number));
    max-height: calc(--value(ratio) * 100%);
    max-height: --value("auto", --container-*, [*]);
}
@utility max-h-px {
    max-height: 1px;
}
@utility max-h-full {
    max-height: 100%;
}
@utility max-h-screen {
    max-height: 100vh;
}
@utility max-h-dvh {
    max-height: 100dvh;
}
@utility max-h-dvw {
    max-height: 100dvw;
}
@utility max-h-lvh {
    max-height: 100lvh;
}
@utility max-h-lvw {
    max-height: 100lvw;
}
@utility max-h-svw {
    max-height: 100svw;
}
@utility max-h-svh {
    max-height: 100svh;
}
@utility max-h-auto {
    max-height: auto;
}
@utility max-h-min {
    max-height: min-content;
}
@utility max-h-max {
    max-height: max-content;
}
@utility max-h-fit {
    max-height: fit-content;
}
@utility max-h-lh {
    max-height: 1lh;
}

@utility font-* {
    font-family: --value(--font-*, [*]);
}

@utility text-* {
    font-size: --value(--text-*); line-height: --value(--text-*--line-height);
    font-size: --value(length, [length]);
    color: --value(color, [color], --color-*);
}

@utility antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@utility subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
}

@utility italic {
    font-style: italic;
}

@utility not-italic {
    font-style: normal;
}

@utility font-thin {
    font-weight: 100;
}

@utility font-extralight {
    font-weight: 200;
}

@utility font-light {
    font-weight: 300;
}

@utility font-normal {
    font-weight: 400;
}

@utility font-medium {
    font-weight: 500;
}

@utility font-semibold {
    font-weight: 600;
}

@utility font-bold {
    font-weight: 700;
}

@utility font-extrabold {
    font-weight: 800;
}

@utility font-black {
    font-weight: 900;
}

@utility font-* {
    font-weight: --value([*]);
}

@utility font-stretch-ultra-condensed {
    font-stretch: ultra-condensed;
}

@utility font-stretch-extra-condensed {
    font-stretch: extra-condensed;
}

@utility font-stretch-condensed {
    font-stretch: condensed;
}

@utility font-stretch-semi-condensed {
    font-stretch: semi-condensed;
}

@utility font-stretch-semi-expanded {
    font-stretch: semi-expanded;
}

@utility font-stretch-expanded {
    font-stretch: expanded;
}

@utility font-stretch-extra-expanded {
    font-stretch: extra-expanded;
}

@utility font-stretch-ultra-expanded {
    font-stretch: ultra-expanded;
}

@utility font-stretch-* {
    font-stretch: --value(percentage);
}

@utility normal-nums {
    font-variant-numeric: normal;
}

@utility ordinal {
    font-variant-numeric: ordinal;
}

@utility slashed-zero {
    font-variant-numeric: slashed-zero;
}

@utility lining-nums {
    font-variant-numeric: lining-nums;
}

@utility oldstyle-nums {
    font-variant-numeric: oldstyle-nums;
}

@utility proportional-nums {
    font-variant-numeric: proportional-nums;
}

@utility tabular-nums {
    font-variant-numeric: tabular-nums;
}

@utility diagonal-fractions {
    font-variant-numeric: diagonal-fractions;
}

@utility stacked-fractions {
    font-variant-numeric: stacked-fractions;
}

@utility tracking-tighter {
    letter-spacing: var(--tracking-tighter);
}

@utility tracking-tight {
    letter-spacing: var(--tracking-tight);
}

@utility tracking-normal {
    letter-spacing: var(--tracking-normal);
}

@utility tracking-wide {
    letter-spacing: var(--tracking-wide);
}

@utility tracking-wider {
    letter-spacing: var(--tracking-wider);
}

@utility tracking-widest {
    letter-spacing: var(--tracking-widest);
}

@utility tracking-* {
    letter-spacing: --value([*]);
}

@utility line-clamp-* {
    overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: --value(number, [*]);
}

@utility line-clamp-none {
    overflow: visible;
    display: block;
    -webkit-box-orient: horizontal;
    -webkit-line-clamp: unset;
}

@utility leading-none {
    line-height: 1;
}

@utility leading-* {
    line-height: calc(var(--spacing) * --value(number));
    line-height: --value([*]);
}

@utility list-image-* {
    list-stlye-image: --value("none", [*]);
}

@utility list-inside {
    list-style-position: inside;
}

@utility list-outside {
    list-style-position: outside;
}

@utility list-* {
    list-style-type: --value("disc", "decimal", "none", [*]);
}

@utility text-left {
    text-align: left;
}

@utility text-center {
    text-align: center;
}

@utility text-right {
    text-align: right;
}

@utility text-justify {
    text-align: justify;
}

@utility text-start {
    text-align: start;
}

@utility text-end {
    text-align: end;
}

@utility underline {
    text-decoration-line: underline;
}

@utility overline {
    text-decoration-line: overline;
}

@utility line-through {
    text-decoration-line: line-through;
}

@utility no-underline {
    text-decoration-line: none;
}

@utility decoration-solid {
    text-decoration-style: solid;
}

@utility decoration-double {
    text-decoration-style: double;
}

@utility decoration-dotted {
    text-decoration-style: dotted;
}

@utility decoration-dashed {
    text-decoration-style: dashed;
}

@utility decoration-wavy {
    text-decoration-style: wavy;
}

@utility decoration-* {
    text-decoration-thickness: --value(number, [number])px;
    text-decoration-thickness: --value("from-font", "auto", [*]);
    text-decoration-color: --value(color, [color], --color-*)
}

@utility underline-offset-* {
    text-underline-offset: --value(number) px;
    text-underline-offset: --value("auto", [*]);
}

@utility -underline-offset-* {
    text-underline-offset: calc(--value(number) * -1);
}

@utility uppercase {
    text-transform: uppercase;
}

@utility lowercase {
    text-transform: lowercase;
}

@utility capitalize {
    text-transform: capitalize;
}

@utility normal-case {
    text-transform: none;
}

@utility truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@utility text-ellipsis {
    text-overflow: ellipsis;
}

@utility text-clip {
    text-overflow: clip;
}

@utility text-wrap {
    text-wrap: wrap;
}

@utility text-nowrap {
    text-wrap: nowrap;
}

@utility text-balance {
    text-wrap: balance;
}

@utility text-pretty {
    text-wrap: pretty;
}

@utility ident-* {
    text-ident: calc(var(--spacing) * --value(number));
    text-ident: --value([*]);
}

@utility ident-px {
    text-ident: 1px;
}

@utility -ident-px {
    text-ident: -1px;
}

@utility -ident-* {
    text-ident: calc(var(--spacing) * ---value(number));
}

@utility align-baseline {
    vertical-align: baseline;
}

@utility align-top {
    vertical-align: top;
}

@utility align-middle {
    vertical-align: middle;
}

@utility align-bottom {
    vertical-align: bottom;
}

@utility align-text-top {
    vertical-align: text-top;
}

@utility align-text-bottom {
    vertical-align: text-bottom;
}

@utility align-sub {
    vertical-align: sub;
}

@utility align-super {
    vertical-align: super;
}

@utility align-* {
    vertical-align: --value([*]);
}

@utility whitespace-normal {
    white-space: normal;
}

@utility whitespace-nowrap {
    white-space: nowrap;
}

@utility whitespace-pre {
    white-space: pre;
}

@utility whitespace-pre-line {
    white-space: pre-line;
}

@utility whitespace-pre-wrap {
    white-space: pre-wrap;
}

@utility whitespace-break-spaces {
    white-space: break-spaces;
}

@utility break-normal {
    word-break: normal;
}

@utility break-all {
    word-break: break-all;
}

@utility break-keep {
    word-break: keep-all;
}

@utility wrap-break-word {
    overflow-wrap: break-word;
}

@utility wrap-anywhere {
    overflow-wrap: anywhere;
}

@utility wrap-normal {
    overflow-wrap: normal;
}

@utility hyphens-none {
    hyphens: none;
}

@utility hyphens-manual {
    hyphens: manual;
}

@utility hyphens-auto {
    hyphens: auto;
}

@utility content-* {
    content: --value("none", [*]);
}

@utility bg-fixed {
    background-attachment: fixed;
}

@utility bg-local {
    background-attachment: local;
}

@utility bg-scroll {
    background-attachment: scroll;
}

@utility bg-clip-border {
    background-clip: border-box;
}

@utility bg-clip-padding {
    background-clip: padding-box;
}

@utility bg-clip-content {
    background-clip: content-box;
}

@utility bg-clip-text {
    background-clip: text;
}

@utility bg-* {
    background-color: --value(color, [color], --color-*);
    background-image: --value([*]);
}

@utility bg-none {
    background-image: none;
}

@utility bg-linear-to-t {
    background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

@utility bg-linear-to-tr {
    background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

@utility bg-linear-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

@utility bg-linear-to-br {
    background-image: linear-gradient( to bottom right, var(--tw-gradient-stops) );
}

@utility bg-linear-to-b {
    background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

@utility bg-linear-to-bl {
    background-image: linear-gradient(to bottom left, var(--tw-gradient-stops));
}

@utility bg-linear-to-l {
    background-image: linear-gradient(to left, var(--tw-gradient-stops));
}

@utility bg-linear-to-tl {
    background-image: linear-gradient(to top left, var(--tw-gradient-stops));
}

@utility bg-linear-* {
    background-image: linear-gradient( --value(angle, [*]) in oklab, var(--tw-gradient-stops) );
}

@utility -bg-linear-* {
    background-image: linear-gradient( ---value(angle) in oklab, var(--tw-gradient-stops) );
}

@utility bg-radial {
    background-image: radial-gradient(in oklab, var(--tw-gradient-stops));
}
@utility bg-radial-* {
    background-image: radial-gradient( --value([*]) in oklab, var(--tw-gradient-stops) );
}

@utility bg-conic-* {
    background-image: conic-gradient( from --value(angle, [*]) in oklab, var(--tw-gradient-stops) );
}

@utility -bg-conic-* {
    background-image: conic-gradient( from ---value(angle) in oklab, var(--tw-gradient-stops) );
}

@utility from-* {
    --tw-gradient-from: --value(color, [*]);
    --tw-gradient-from-position: --value(percentage);
}
@utility via-* {
    --tw-gradient-via: --value(color, [*]);
    --tw-gradient-via-position: --value(percentage);
}
@utility to-* {
    --tw-gradient-to: --value(color, [*]);
    --tw-gradient-to-position: --value(percentage);
}

@utility bg-origin-border {
    background-origin: border-box;
}

@utility bg-origin-padding {
    background-origin: padding-box;
}

@utility bg-origin-content {
    background-origin: content-box;
}

@utility bg-top-left {
    background-position: top left;
}

@utility bg-top {
    background-position: top;
}

@utility bg-top-right {
    background-position: top right;
}

@utility bg-left {
    background-position: left;
}

@utility bg-center {
    background-position: center;
}

@utility bg-right {
    background-position: right;
}

@utility bg-bottom-left {
    background-position: bottom left;
}

@utility bg-bottom {
    background-position: bottom;
}

@utility bg-bottom-right {
    background-position: bottom right;
}

@utility bg-position-* {
    background-position: --value([*]);
}

@utility bg-repeat {
    background-repeat: repeat;
}

@utility bg-repeat-x {
    background-repeat: repeat-x;
}

@utility bg-repeat-y {
    background-repeat: repeat-y;
}

@utility bg-repeat-space {
    background-repeat: space;
}

@utility bg-repeat-round {
    background-repeat: round;
}

@utility bg-no-repeat {
    background-repeat: no-repeat;
}

@utility bg-auto {
    background-size: auto;
}

@utility bg-cover {
    background-size: cover;
}

@utility bg-contain {
    background-size: contain;
}

@utility bg-size-* {
    background-size: --value([*]);
}

@utility rounded-* {
    border-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-none {
    border-radius: 0;
}
@utility rounded-full {
    border-radius: calc(infinity * 1px);
}

@utility rounded-s-* {
    border-start-start-radius: --value(length, [length], --radius-*, [*]); border-end-start-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-s-none {
    border-start-start-radius: 0; border-end-start-radius: 0;
}
@utility rounded-s-full {
    border-start-start-radius: calc(infinity * 1px); border-end-start-radius: calc(infinity * 1px);
}

@utility rounded-e-* {
    border-start-end-radius: --value(length, [length], --radius-*, [*]); border-end-end-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-e-none {
    border-start-end-radius: 0; border-end-end-radius: 0;
}
@utility rounded-e-full {
    border-start-end-radius: calc(infinity * 1px); border-end-end-radius: calc(infinity * 1px);
}

@utility rounded-t-* {
    border-top-left-radius: --value(length, [length], --radius-*, [*]); border-top-right-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-t-none {
    border-top-left-radius: 0; border-top-right-radius: 0;
}
@utility rounded-t-full {
    border-top-left-radius: calc(infinity * 1px); border-top-right-radius: calc(infinity * 1px);
}

@utility rounded-r-* {
    border-top-right-radius: --value(length, [length], --radius-*, [*]); border-bottom-right-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-r-none {
    border-top-right-radius: 0; border-bottom-right-radius: 0;
}
@utility rounded-r-full {
    border-top-right-radius: calc(infinity * 1px); border-bottom-right-radius: calc(infinity * 1px);
}

@utility rounded-r-* {
    border-bottom-right-radius: --value(length, [length], --radius-*, [*]); border-bottom-left-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-r-none {
    border-bottom-right-radius: 0; border-bottom-left-radius: 0;
}
@utility rounded-r-full {
    border-bottom-right-radius: calc(infinity * 1px); border-bottom-left-radius: calc(infinity * 1px);
}

@utility rounded-l-* {
    border-top-left-radius: --value(length, [length], --radius-*, [*]); border-bottom-left-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-l-none {
    border-top-left-radius: 0; border-bottom-left-radius: 0;
}
@utility rounded-l-full {
    border-top-left-radius: calc(infinity * 1px); border-bottom-left-radius: calc(infinity * 1px);
}

@utility rounded-ss-* {
    border-start-start-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-ss-none {
    border-start-start-radius: 0;
}
@utility rounded-ss-full {
    border-start-start-radius: calc(infinity * 1px);
}

@utility rounded-se-* {
    border-start-end-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-se-none {
    border-start-end-radius: 0;
}
@utility rounded-se-full {
    border-start-end-radius: calc(infinity * 1px);
}

@utility rounded-ee-* {
    border-end-end-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-ee-none {
    border-end-end-radius: 0;
}
@utility rounded-ee-full {
    border-end-end-radius: calc(infinity * 1px);
}

@utility rounded-es-* {
    border-end-start-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-es-none {
    border-end-start-radius: 0;
}
@utility rounded-es-full {
    border-end-start-radius: calc(infinity * 1px);
}

@utility rounded-tl-* {
    border-top-left-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-tl-none {
    border-top-left-radius: 0;
}
@utility rounded-tl-full {
    border-top-left-radius: calc(infinity * 1px);
}

@utility rounded-tr-* {
    border-top-right-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-tr-none {
    border-top-right-radius: 0;
}
@utility rounded-tr-full {
    border-top-right-radius: calc(infinity * 1px);
}

@utility rounded-br-* {
    border-bottom-right-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-br-none {
    border-bottom-right-radius: 0;
}
@utility rounded-br-full {
    border-bottom-right-radius: calc(infinity * 1px);
}

@utility rounded-bl-* {
    border-bottom-left-radius: --value(length, [length], --radius-*, [*]);
}
@utility rounded-bl-none {
    border-bottom-left-radius: 0;
}
@utility rounded-bl-full {
    border-bottom-left-radius: calc(infinity * 1px);
}

@utility border {
    border-width: 1px;
}

@utility border-* {
    border-width: --value(number)px;
    border-width: --value([*]);
}

@utility border-x {
    border-inline-width: 1px;
}

@utility border-x-* {
    border-inline-width: --value(number)px;
    border-inline-width: --value([*]);
}

@utility border-y {
    border-block-width: 1px;
}

@utility border-y-* {
    border-block-width: --value(number)px;
    border-block-width: --value([*]);
}

@utility border-s {
    border-inline-start-width: 1px;
}

@utility border-s-* {
    border-inline-start-width: --value(number)px;
    border-inline-start-width: --value([*]);
}

@utility border-e {
    border-inline-end-width: 1px;
}

@utility border-e-* {
    border-inline-end-width: --value(number)px;
    border-inline-end-width: --value([*]);
}

@utility border-t {
    border-top-width: 1px;
}

@utility border-t-* {
    border-top-width: --value(number)px;
    border-top-width: --value([*]);
}

@utility border-r {
    border-right-width: 1px;
}

@utility border-r-* {
    border-right-width: --value(number)px;
    border-right-width: --value([*]);
}

@utility border-b {
    border-bottom-width: 1px;
}

@utility border-b-* {
    border-bottom-width: --value(number)px;
    border-bottom-width: --value([*]);
}

@utility border-l {
    border-left-width: 1px;
}

@utility border-l-* {
    border-left-width: --value(number)px;
    border-left-width: --value([*]);
}

@utility divide-x { & > :not(:last-child) { border-inline-start-width: 0px; border-inline-end-width: 1px; } }
@utility divide-x-* {
    & > :not(:last-child) { border-inline-start-width: 0px; border-inline-end-width: --value(number)px; }
    & > :not(:last-child) { border-inline-start-width: 0px; border-inline-end-width: --value([*]); }
}

@utility divide-y { & > :not(:last-child) { border-top-width: 0px; border-bottom-width: 1px; } }
@utility divide-y-* {
    & > :not(:last-child) { border-top-width: 0px; border-bottom-width: --value(number)px; }
    & > :not(:last-child) { border-top-width: 0px; border-bottom-width: --value([*]); }
}

@utility divide-x-reverse {
    --tw-divide-x-reverse: 1;
}

@utility divide-y-reverse {
    --tw-divide-y-reverse: 1;
}

@utility border-* {
    border-color: --value(color, [color], --color-*);
}

@utility border-x-* {
    border-inline-color: --value(color, [color], --color-*);
}

@utility border-y-* {
    border-block-color: --value(color, [color], --color-*);
}

@utility border-s-* {
    border-inline-start-color: --value(color, [color], --color-*);
}

@utility border-e-* {
    border-inline-end-color: --value(color, [color], --color-*);
}

@utility border-t-* {
    border-top-color: --value(color, [color], --color-*);
}

@utility border-r-* {
    border-right-color: --value(color, [color], --color-*);
}

@utility border-b-* {
    border-bottom-color: --value(color, [color], --color-*);
}

@utility border-l-* {
    border-left-color: --value(color, [color], --color-*);
}

@utility divide-* {
    & > :not(:last-child) { border-color: --value(color, [color], --color-*); }
}

@utility border-solid {
    border-style: solid;
}

@utility border-dashed {
    border-style: dashed;
}

@utility border-dotted {
    border-style: dotted;
}

@utility border-double {
    border-style: double;
}

@utility border-hidden {
    border-style: hidden;
}

@utility border-none {
    border-style: none;
}

@utility divide-solid {
    & > :not(:last-child) {
        border-style: solid;
    }
}

@utility divide-dashed {
    & > :not(:last-child) {
        border-style: dashed;
    }
}

@utility divide-dotted {
    & > :not(:last-child) {
        border-style: dotted;
    }
}

@utility divide-double {
    & > :not(:last-child) {
        border-style: double;
    }
}

@utility divide-hidden {
    & > :not(:last-child) {
        border-style: hidden;
    }
}

@utility divide-none {
    & > :not(:last-child) {
        border-style: none;
    }
}

@utility outline {
    outline-width: 1px;
}

@utility outline-* {
    outline-width: --value(number)px;
    outline-width: --value([*]);
    outline-color: --value(color, [color], --color-*);
}

@utility outline-solid {
    outline-style: solid;
}

@utility outline-dashed {
    outline-style: dashed;
}

@utility outline-dotted {
    outline-style: dotted;
}

@utility outline-double {
    outline-style: double;
}

@utility outline-hidden {
    outine: 2px solid transparent;
    outline-offset: 2px;
}

@utility outline-none {
    outline-style: none;
}

@utility outline-offset-* {
    outline-offset: --value(number)px;
    outline-offset: --value([*]);
}

@utility -outline-offset-* {
    outline-offset: ---value(number)px;
}

@utility shadow-none {
    --tw-shadow-color: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-* {
    --tw-shadow-color: --value(--shadow-*, [*]); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: --value(--color-*, color); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility inset-shadow-none {
    --tw-inset-shadow-color: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility inset-shadow-* {
    --tw-inset-shadow-color: --value(--shadow-*, [*]); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-inset-shadow-color: --value(--color-*, color); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(var(--default-ring-width, 1px) + var(--tw-ring-offset-width)) var(--default-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility ring-* {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(--value(number)px + var(--tw-ring-offset-width)) var(--default-ring-color, currentcolor); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(--value(length) + var(--tw-ring-offset-width)) var(--default-ring-color, currentcolor); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: --value([*]); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: --value(--color-*, color); box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility inset-ring {
    --tw-ring-shadow: 0 0 0 1px;
}

@utility inset-ring-* {
    --tw-inset-ring-shadow: 0 0 0 --value(number)px;
    --tw-inset-ring-shadow: 0 0 0 --value([*]);
    --tw-inset-ring-color: --value(--color-*, color);
}

@utility text-shadow-none {
    text-shadow: none;
}

@utility text-shadow-* {
    text-shadow: --value(--text-shadow-*, [*]);
    --tw-shadow-color: --value(color);
}

@utility opacity-* {
    opacity: --value(number)%;
    opacity: --value([*]);
}

@utility mix-blend-* {
    mix-blend-mode: --value("normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-darker", "plus-lighter");
}

@utility bg-blend-* {
    background-blend-mode: --value("normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity");
}

@utility mask-clip-border {
    mask-clip: border-box;
}

@utility mask-clip-padding {
    mask-clip: padding-box;
}

@utility mask-clip-content {
    mask-clip: content-box;
}

@utility mask-clip-fill {
    mask-clip: fill-box;
}

@utility mask-clip-stroke {
    mask-clip: stroke-box;
}

@utility mask-clip-view {
    mask-clip: view-box;
}

@utility mask-no-clip {
    mask-clip: no-clip;
}

@utility mask-add {
    mask-composite: add;
}

@utility mask-subtract {
    mask-composite: subtract;
}

@utility mask-intersect {
    mask-composite: intersect;
}

@utility mask-exclude {
    mask-composite: exclude;
}

@utility mask-* {
    mask-image: --value("none", [*]);
}

@utility mask-linear-* {
   mask-image: linear-gradient(--value(number)deg, black var(--tw-mask-linear-from), transparent var(--tw-mask-linear-to));
}
@utility -mask-linear-* {
   mask-image: linear-gradient(calc(--value(number)deg * -1), black var(--tw-mask-linear-from), transparent var(--tw-mask-linear-to));
}

@utility mask-linear-from-* {
    mask-image: linear-gradient(var(--tw-mask-linear-position), black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-linear-to));
    mask-image: linear-gradient(var(--tw-mask-linear-position), black --value(percentage), transparent var(--tw-mask-linear-to));
    mask-image: linear-gradient(var(--tw-mask-linear-position), --value(color) var(--tw-mask-linear-from), transparent var(--tw-mask-linear-to));
    mask-image: linear-gradient(var(--tw-mask-linear-position), black --value([*]), transparent var(--tw-mask-linear-to));
}

@utility mask-linear-to-* {
    mask-image: linear-gradient(var(--tw-mask-linear-position), black var(--tw-mask-linear-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: linear-gradient(var(--tw-mask-linear-position), black var(--tw-mask-linear-from), transparent --value(percentage));
    mask-image: linear-gradient(var(--tw-mask-linear-position), black var(--tw-mask-linear-from), --value(color) var(--tw-mask-linear-to));
    mask-image: linear-gradient(var(--tw-mask-linear-position), black var(--tw-mask-linear-from), transparent --value([*]));
}

@utility mask-t-from-* {
    mask-image: linear-gradient(to top, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-top-to));
    mask-image: linear-gradient(to top, black --value(percentage), transparent var(--tw-mask-top-to));
    mask-image: linear-gradient(to top, --value(color) var(--tw-mask-top-from), transparent var(--tw-mask-top-to));
    mask-image: linear-gradient(to top, black --value([*]), transparent var(--tw-mask-top-to));
}

@utility mask-t-to-* {
    mask-image: linear-gradient(to top, black var(--tw-mask-top-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: linear-gradient(to top, black var(--tw-mask-top-from), transparent --value(percentage));
    mask-image: linear-gradient(to top, black var(--tw-mask-top-from), --value(color) var(--tw-mask-top-to));
    mask-image: linear-gradient(to top, black var(--tw-mask-top-from), transparent --value([*]));
}

@utility mask-r-from-* {
    mask-image: linear-gradient(to right, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-right-to));
    mask-image: linear-gradient(to right, black --value(percentage), transparent var(--tw-mask-right-to));
    mask-image: linear-gradient(to right, --value(color) var(--tw-mask-right-from), transparent var(--tw-mask-right-to));
    mask-image: linear-gradient(to right, black --value([*]), transparent var(--tw-mask-right-to));
}

@utility mask-r-to-* {
    mask-image: linear-gradient(to right, black var(--tw-mask-right-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: linear-gradient(to right, black var(--tw-mask-right-from), transparent --value(percentage));
    mask-image: linear-gradient(to right, black var(--tw-mask-right-from), --value(color) var(--tw-mask-right-to));
    mask-image: linear-gradient(to right, black var(--tw-mask-right-from), transparent --value([*]));
}

@utility mask-b-from-* {
    mask-image: linear-gradient(to bottom, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-bottom-to));
    mask-image: linear-gradient(to bottom, black --value(percentage), transparent var(--tw-mask-bottom-to));
    mask-image: linear-gradient(to bottom, --value(color) var(--tw-mask-bottom-from), transparent var(--tw-mask-bottom-to));
    mask-image: linear-gradient(to bottom, black --value([*]), transparent var(--tw-mask-bottom-to));
}

@utility mask-b-to-* {
    mask-image: linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent --value(percentage));
    mask-image: linear-gradient(to bottom, black var(--tw-mask-bottom-from), --value(color) var(--tw-mask-bottom-to));
    mask-image: linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent --value([*]));
}

@utility mask-l-from-* {
    mask-image: linear-gradient(to left, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-left-to));
    mask-image: linear-gradient(to left, black --value(percentage), transparent var(--tw-mask-left-to));
    mask-image: linear-gradient(to left, --value(color) var(--tw-mask-left-from), transparent var(--tw-mask-left-to));
    mask-image: linear-gradient(to left, black --value([*]), transparent var(--tw-mask-left-to));
}

@utility mask-l-to-* {
    mask-image: linear-gradient(to left, black var(--tw-mask-left-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: linear-gradient(to left, black var(--tw-mask-left-from), transparent --value(percentage));
    mask-image: linear-gradient(to left, black var(--tw-mask-left-from), --value(color) var(--tw-mask-left-to));
    mask-image: linear-gradient(to left, black var(--tw-mask-left-from), transparent --value([*]));
}

@utility mask-y-from-* {
    mask-composite: intersect; mask-image: linear-gradient(to top, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-top-to)), linear-gradient(to bottom, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-bottom-to));
    mask-composite: intersect; mask-image: linear-gradient(to top, black --value(percentage), transparent var(--tw-mask-top-to)), linear-gradient(to bottom, black --value(percentage), transparent var(--tw-mask-bottom-to));
    mask-composite: intersect; mask-image: linear-gradient(to top, --value(color) var(--tw-mask-top-from), transparent var(--tw-mask-top-to)), linear-gradient(to bottom, --value(color) var(--tw-mask-bottom-from), transparent var(--tw-mask-bottom-to));
    mask-composite: intersect; mask-image: linear-gradient(to top, black --value([*]), transparent var(--tw-mask-top-to)), linear-gradient(to bottom, black --value([*]), transparent var(--tw-mask-bottom-to));
}

@utility mask-y-to-* {
    mask-composite: intersect; mask-image: linear-gradient(to top, black var(--tw-mask-top-from), transparent calc(var(--spacing) * --value(number))), linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent calc(var(--spacing) * --value(number)));
    mask-composite: intersect; mask-image: linear-gradient(to bottom, black var(--tw-mask-top-from), transparent --value(percentage)), linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent --value(percentage));
    mask-composite: intersect; mask-image: linear-gradient(to bottom, black var(--tw-mask-top-from), --value(color) var(--tw-mask-top-to)), linear-gradient(to bottom, black var(--tw-mask-bottom-from), --value(color) var(--tw-mask-bottom-to));
    mask-composite: intersect; mask-image: linear-gradient(to top, black var(--tw-mask-top-from), transparent --value([*])),linear-gradient(to bottom, black var(--tw-mask-bottom-from), transparent --value([*]));
}

@utility mask-x-from-* {
    mask-composite: intersect; mask-image: linear-gradient(to right, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-right-to)), linear-gradient(to left, black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-left-to));
    mask-composite: intersect; mask-image: linear-gradient(to right, black --value(percentage), transparent var(--tw-mask-right-to)), linear-gradient(to left, black --value(percentage), transparent var(--tw-mask-left-to));
    mask-composite: intersect; mask-image: linear-gradient(to right, --value(color) var(--tw-mask-right-from), transparent var(--tw-mask-right-to)), linear-gradient(to left, --value(color)  var(--tw-mask-left-from), transparent var(--tw-mask-left-to));
    mask-composite: intersect; mask-image: linear-gradient(to right, black --value([*]), transparent var(--tw-mask-right-to)), linear-gradient(to left, black --value([*]), transparent var(--tw-mask-left-to));
}

@utility mask-x-to-* {
   mask-composite: intersect; mask-image: linear-gradient(to right, black var(--tw-mask-right-from), transparent calc(var(--spacing) * --value(number))), linear-gradient(to left, black var(--tw-mask-left-from), transparent calc(var(--spacing) * --value(number)));
   mask-composite: intersect; mask-image: linear-gradient(to left, black var(--tw-mask-right-from), transparent --value(percentage)), linear-gradient(to left, black var(--tw-mask-left-from), transparent --value(percentage));
   mask-composite: intersect; mask-image: linear-gradient(to left, black var(--tw-mask-right-from), --value(color) var(--tw-mask-right-to)), linear-gradient(to left, black var(--tw-mask-left-from), --value(color) var(--tw-mask-left-to));
   mask-composite: intersect; mask-image: linear-gradient(to right, black var(--tw-mask-right-from), transparent --value([*])),linear-gradient(to left, black var(--tw-mask-left-from), transparent --value([*]));
}

@utility mask-radial-* {
    --tw-mask-radial-size: --value(size, [size]);
    mask-image: radial-gradient(--value([*]));
}

@utility mask-radial-from-* {
    mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-radial-to));
    mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black --value(percentage), transparent var(--tw-mask-radial-to));
    mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), --value(color) var(--tw-mask-radial-from), transparent var(--tw-mask-radial-to));
    mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black --value([*]), transparent var(--tw-mask-radial-to));
}

@utility mask-radial-to-* {
   mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black var(--tw-mask-radial-from), transparent calc(var(--spacing) * --value(number)));
   mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black var(--tw-mask-radial-from), transparent --value(percentage));
   mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black var(--tw-mask-radial-from), --value(color) var(--tw-mask-radial-to));
   mask-image: radial-gradient(var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), black var(--tw-mask-radial-from), transparent --value([*]));
}

@utility mask-circle {
    --tw-mask-radial-shape: circle;
}

@utility mask-ellipse {
    --tw-mask-radial-shape: ellipse;
}

@utility mask-radial-closest-corner {
    --tw-mask-radial-size: closest-corner;
}

@utility mask-radial-closest-side {
    --tw-mask-radial-size: closest-side;
}

@utility mask-radial-farthest-corner {
    --tw-mask-radial-size: farthest-corner;
}

@utility mask-radial-farthest-side {
    --tw-mask-radial-size: farthest-side;
}

@utility mask-radial-at-top-left {
    --tw-mask-radial-position: top left;
}

@utility mask-radial-at-top {
    --tw-mask-radial-position: top;
}

@utility mask-radial-at-top-right {
    --tw-mask-radial-position: top right;
}

@utility mask-radial-at-left {
    --tw-mask-radial-position: left;
}

@utility mask-radial-at-center {
    --tw-mask-radial-position: center;
}

@utility mask-radial-at-right {
    --tw-mask-radial-position: right;
}

@utility mask-radial-at-bottom-left {
    --tw-mask-radial-position: bottom left;
}

@utility mask-radial-at-bottom {
    --tw-mask-radial-position: bottom;
}

@utility mask-radial-at-bottom-right {
    --tw-mask-radial-position: bottom right;
}

@utility mask-conic-* {
    mask-image: conic-gradient(from --value(number)deg, black var(--tw-mask-conic-from), transparent var(--tw-mask-conic-to));
}

@utility mask-conic-* {
    mask-image: conic-gradient(from --calc(value(number)deg * -1), black var(--tw-mask-conic-from), transparent var(--tw-mask-conic-to));
}

@utility mask-conic-from-* {
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black calc(var(--spacing) * --value(number)), transparent var(--tw-mask-conic-to));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black --value(percentage), transparent var(--tw-mask-conic-to));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), --value(color) var(--tw-mask-conic-from), transparent var(--tw-mask-conic-to));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black --value([*]), transparent var(--tw-mask-conic-to));
}

@utility mask-conic-to-* {
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black var(--tw-mask-conic-from), transparent calc(var(--spacing) * --value(number)));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black var(--tw-mask-conic-from), transparent --value(percentage));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black var(--tw-mask-conic-from), --value(color) var(--tw-mask-conic-to));
    mask-image: conic-gradient(from var(--tw-mask-conic-position), black var(--tw-mask-conic-from), transparent --value([*]));
}

@utility mask-alpha {
    mask-mode: alpha;
}

@utility mask-luminance {
    mask-mode: luminance;
}

@utility mask-match {
    mask-mode: match-source;
}

@utility mask-origin-border {
    mask-origin: border-box;
}

@utility mask-origin-padding {
    mask-origin: padding-box;
}

@utility mask-origin-content {
    mask-origin: content-box;
}

@utility mask-origin-fill {
    mask-origin: fill-box;
}

@utility mask-origin-stroke {
    mask-origin: stroke-box;
}

@utility mask-origin-view {
    mask-origin: view-box;
}

@utility mask-top-left {
    mask-position: top left;
}

@utility mask-top {
    mask-position: top;
}

@utility mask-top-right {
    mask-position: top right;
}

@utility mask-left {
    mask-position: left;
}

@utility mask-center {
    mask-position: center;
}

@utility mask-right {
    mask-position: right;
}

@utility mask-bottom-left {
    mask-position: bottom left;
}

@utility mask-bottom {
    mask-position: bottom;
}

@utility mask-bottom-right {
    mask-position: bottom right;
}

@utility mask-position-* {
    mask-position: --value([*]);
}

@utility mask-repeat {
    mask-repeat: repeat;
}

@utility mask-no-repeat {
    mask-repeat: no-repeat;
}

@utility mask-repeat-x {
    mask-repeat: repeat-x;
}

@utility mask-repeat-y {
    mask-repeat: repeat-y;
}

@utility mask-repeat-space {
    mask-repeat: space;
}

@utility mask-repeat-round {
    mask-repeat: round;
}

@utility mask-auto {
    mask-size: auto;
}

@utility mask-cover {
    mask-size: cover;
}

@utility mask-contain {
    mask-size: contain;
}

@utility mask-size-* {
    mask-size: --value([*])
}

@utility mask-type-alpha {
    mask-type: alpha;
}

@utility mask-type-luminance {
    mask-type: luminance;
}

@utility filter-none {
    filter: none;
}

@utility filter-* {
    filter: --value([*]);
}

@utility blur-none {
    filter: ;
}

@utility blur-* {
    filter: blur(--value(--blur-*));
    filter: bue(--value([*]))
}

@utility brightness-* {
    filter: brightness(--value(number)%);
    filter: brightness(--value([*]));
}

@utility contrast-* {
    filter: constrast(--value(number)%);
    filter: constrast(--value([*]));
}

@utility drop-shadow-none {
    filter: drop-shadow(0 0 #0000);
}

@utility drop-shadow-* {
    filter: drop-shadow(--value(--drop-shadow-*, [*]));
    --tw-drop-shadow-color: --value(--color-*, color);
}

@utility grayscale {
    filter: grayscale(100%);
}
@utility grayscale-* {
    filter: grayscale(--value(number)%);
    filter: grayscale(--value([*]));
}

@utility hue-rotate-* {
    filter: hue-rotate(--value(number)deg);
    filter: hue-rotate(--value([*]));
}

@utility -hue-rotate-* {
    filter: hue-rotate(calc(--value(number)deg * -1));
}

@utility invert {
    filter: invert(100%);
}
@utility invert-* {
    filter: invert(--value(number)%);
    filter: invert(--value([*]));
}

@utility saturate-* {
    filter: saturate(--value(number)%);
    filter: saturate(--value([*]));
}

@utility sepia {
    filter: sepia(100%);
}
@utility sepia-* {
    filter: sepia(--value(number)%);
    filter: sepia(--value([*]));
}

@utility backdrop-filter-none {
    backdrop-filter: none;
}

@utility backdrop-filter-* {
    backdrop-filter: --value([*]);
}

@utility backdrop-blur-none {
    backdrop-filter: ;
}

@utility backdrop-blur-* {
    backdrop-filter: blur(--value(--blur-*));
    backdrop-filter: bue(--value([*]))
}

@utility backdrop-brightness-* {
    backdrop-filter: brightness(--value(number)%);
    backdrop-filter: brightness(--value([*]));
}

@utility backdrop-contrast-* {
    backdrop-filter: constrast(--value(number)%);
    backdrop-filter: constrast(--value([*]));
}

@utility backdrop-drop-shadow-none {
    backdrop-filter: drop-shadow(0 0 #0000);
}

@utility backdrop-drop-shadow-* {
    backdrop-filter: drop-shadow(--value(--drop-shadow-*, [*]));
    --tw-drop-shadow-color: --value(--color-*, color);
}

@utility backdrop-grayscale {
    backdrop-filter: grayscale(100%);
}
@utility backdrop-grayscale-* {
    backdrop-filter: grayscale(--value(number)%);
    backdrop-filter: grayscale(--value([*]));
}

@utility backdrop-hue-rotate-* {
    backdrop-filter: hue-rotate(--value(number)deg);
    backdrop-filter: hue-rotate(--value([*]));
}

@utility backdrop--hue-rotate-* {
    backdrop-filter: hue-rotate(calc(--value(number)deg * -1));
}

@utility backdrop-invert {
    backdrop-filter: invert(100%);
}
@utility backdrop-invert-* {
    backdrop-filter: invert(--value(number)%);
    backdrop-filter: invert(--value([*]));
}

@utility backdrop-saturate-* {
    backdrop-filter: saturate(--value(number)%);
    backdrop-filter: saturate(--value([*]));
}

@utility backdrop-sepia {
    backdrop-filter: sepia(100%);
}
@utility backdrop-sepia-* {
    backdrop-filter: sepia(--value(number)%);
    backdrop-filter: sepia(--value([*]));
}

@utility border-collapse {
    border-collapse: collapse;
}

@utility border-separate {
    border-collapse: separate;
}

@utility border-spacing-* {
    border-spacing: calc(var(--spacing) * --value(number));
    border-spacing: --value([*]);
}

@utility border-spacing-x-* {
    border-spacing: calc(var(--spacing) * --value(number)) var(--tw-border-spacing-y);
    border-spacing: --value([*]) var(--tw-border-spacing-y);
}

@utility border-spacing-y-* {
    border-spacing: var(--tw-border-spacing-x) calc(var(--spacing) * --value(number));
    border-spacing: var(--tw-border-spacing-x) --value([*]);
}

@utility table-auto {
    table-layout: auto;
}
@utility table-fixed {
    table-layout: fixed;
}

@utility caption-top {
    caption-side: top;
}
@utility caption-bottom {
    caption-side: bottom;
}

@utility transform {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transform-all {
    transition-property: all;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transform-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transform-opacity {
    transition-property: opacity;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transform-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transform-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */
    transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transition-none {
    transition-property: none;
}

@utility transition-* {
    transition-property: --value([*]); transition-timing-function: var(--default-transition-timing-function); /* cubic-bezier(0.4, 0, 0.2, 1) */ transition-duration: var(--default-transition-duration); /* 150ms */
}

@utility transition-normal {
    transition-behavior: normal;
}

@utility transition-discrete {
    transition-behavior: allow-discrete;
}

@utility duration-* {
    transition-duration: --value(number)ms;
    transition-duration: --value("initial", [*]);
}

@utility ease-* {
    transition-timing-function: --value("linear", "intial", [*]);
}
@utility ease-in {
    transition-timing-function: var(--ease-in); /* cubic-bezier(0.4, 0, 1, 1) */
}
@utility ease-out {
    transition-timing-function: var(--ease-out); /* cubic-bezier(0.4, 0, 1, 1) */
}
@utility ease-in-out {
    transition-timing-function: var(--ease-in-out); /* cubic-bezier(0.4, 0, 1, 1) */
}

@utility delay-* {
    transition-delay: --value(number)ms;
    transition-delay: --value([*]);
}

@utility animate-* {
    animation: --value(--animate-*, "none", [*]);
}

@utility backface-hidden {
    backface-visibility: hidden;
}

@utility backface-visible {
    backface-visibility: visible;
}

@utility perspective-* {
    perspective: --value(--perspective-*, "none", [*]);
}

@utility perspective-origin-center {
    perspective-origin: center;
}
@utility perspective-origin-top {
    perspective-origin: top;
}

@utility perspective-origin-top-right {
    perspective-origin: top right;
}

@utility perspective-origin-right {
    perspective-origin: right;
}

@utility perspective-origin-bottom-right {
    perspective-origin: bottom right;
}

@utility perspective-origin-bottom {
    perspective-origin: bottom;
}

@utility perspective-origin-bottom-left {
    perspective-origin: bottom left;
}

@utility perspective-origin-left {
    perspective-origin: left;
}

@utility perspective-origin-top-left {
    perspective-origin: top left;
}
@utility perspective-origin-* {
    perspective-origin: --value(*);
}

@utility rotate-none {
    rotate: none;
}
@utility rotate-* {
    rotate: --value(number)deg;
    rotate: --value([*]);
}
@utility -rotate-* {
    rotate: calc(--value(number)deg * -1);
}

@utility rotate-x-* {
    transform: rotateX(--value(number)deg) var(--tw-rotate-y);
    transform: rotateX(--value([*])) var(--tw-rotate-y);
}
@utility -rotate-x-* {
    transform: rotateX(---value(number)deg) var(--tw-rotate-y);
}

@utility rotate-y-* {
    transform: var(--tw-rotate-x) rotateY(--value(number)deg);
    transform: var(--tw-rotate-x) rotateY(--value([*]));
}
@utility -rotate-y-* {
    transform: var(--tw-rotate-x) rotateY(---value(number)deg);
}

@utility rotate-z-* {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) rotateZ(--value(number)deg);
    transform: var(--tw-rotate-x) var(--tw-rotate-y) rotateZ(--value([*]));
}
@utility -rotate-z-* {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) rotateZ(---value(number)deg);
}

@utility scale-none {
    scale: none;
}

@utility scale-* {
    scale: --value(number)% --value(number)%;
    scale: --valie([*]);
}

@utility -scale-* {
    scale: calc(--value(number)% * -1) calc(--value(number)% * -1);
}

@utility scale-x-* {
    scale: --value(number)% var(--tw-scale-y);
    scale: --value([*]) var(--tw-scale-y);
}

@utility -scale-x-* {
    scale: calc(--value(number)% * -1) var(--tw-scale-y);
}

@utility scale-y-* {
    scale: var(--tw-scale-x) --value(number)%;
    scale: var(--tw-scale-x) --value([*]);
}

@utility -scale-y-* {
    scale: var(--tw-scale-x) calc(--value(number)% * -1);
}

@utility scale-z-* {
    scale: var(--tw-scale-x) var(--tw-scale-y) --value(number)%;
}

@utility -scale-z-* {
    scale: var(--tw-scale-x) var(--tw-scale-y) calc(--value(number)% * -1);
    scale: var(--tw-scale-x) var(--tw-scale-y) --value([*]);
}

@utility scale-3d {
    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);
}

@utility skew-* {
    transform: skewX(--value(number)deg) skewY(--value(number)deg);
}

@utility -skew-* {
    transform: skewX(---value(number)deg) skewY(---value(number)deg);
    transform: skewX(--value([*])) skewY(--value([*]));
}

@utility skew-x-* {
    transform: skewX(--value(number)deg);
    transform: skewX(--value([*]));
}

@utility -skew-x-* {
    transform: skewX(---value(number)deg);
}

@utility skew-y-* {
    transform: skewY(--value(number)deg);
}

@utility -skew-y-* {
    transform: skewY(---value(number)deg);
    transform: skewY(--value([*]));
}

@utility transform-* {
    transform: --value([*]);
}

@utility transform-none {
    transform: none;
}

@utility transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}

@utility transform-cpu {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}

@utility origin-center {
    transform-origin: center;
}

@utility origin-top {
    transform-origin: top;
}

@utility origin-top-right {
    transform-origin: top right;
}

@utility origin-right {
    transform-origin: right;
}

@utility origin-bottom-right {
    transform-origin: bottom right;
}

@utility origin-bottom {
    transform-origin: bottom;
}

@utility origin-bottom-left {
    transform-origin: bottom left;
}

@utility origin-left {
    transform-origin: left;
}

@utility origin-top-left {
    transform-origin: top left;
}

@utility origin-* {
    transform-origin: --value([*]);
}

@utility translate-* {
    --tw-translate-x: calc(var(--spacing) * --value(number)); --tw-translate-y: calc(var(--spacing) * --value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: calc(--value(ratio) * 100%); --tw-translate-y: calc(--value(ratio) * 100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: --value([*]); --tw-translate-y: --value([*]); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility -translate-* {
    --tw-translate-x: calc(var(--spacing) * ---value(number)); --tw-translate-y: calc(var(--spacing) * ---value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: calc(--value(ratio) * -100%); --tw-translate-y: calc(--value(ratio) * -100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility translate-full {
    --tw-translate-x: 100%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility -translate-full {
    --tw-translate-x: -100%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility translate-px {
    --tw-translate-x: 1px;
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-px {
    --tw-translate-x: -1px;
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility translate-x-* {
    --tw-translate-x: calc(var(--spacing) * --value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: calc(--value(ratio) * 100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: --value([*]); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility -translate-x-* {
    --tw-translate-x: calc(var(--spacing) * ---value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-x: calc(--value(ratio) * -100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility translate-x-px {
    --tw-translate-x: 1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-x-px {
    --tw-translate-x: -1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility translate-y-* {
    --tw-translate-y: calc(var(--spacing) * --value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-y: calc(--value(ratio) * 100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-y: --value([*]); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-y-* {
    --tw-translate-y: calc(var(--spacing) * ---value(number)); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
    --tw-translate-y: calc(--value(ratio) * -100%); translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility translate-y-px {
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}
@utility -translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x, 0) var(--tw-translate-y, 0);
}

@utility translate-z-* {
    --tw-translate-z: calc(var(--spacing) * --value(number)); translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
    --tw-translate-z: --value([*]); translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
}
@utility -translate-z-* {
    --tw-translate-z: calc(var(--spacing) * ---value(number)); translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
}
@utility translate-z-px {
    --tw-translate-z: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
}
@utility -translate-z-px {
    --tw-translate-z: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
}

@utility translate-none {
    translate: none;
}

@utility accent-* {
    accent-color: --value(--color-*, color, [*]);
}

@utility appearance-none {
    appearance: none;
}
@utility appearance-auto {
    appearance: auto;
}

@utility caret-* {
    accent-color: --value(--color-*, color, [*]);
}

@utility scheme-normal {
    color-scheme: normal;
}

@utility scheme-dark {
    color-scheme: dark;
}

@utility scheme-light {
    color-scheme: light;
}

@utility scheme-light-dark {
    color-scheme: light dark;
}

@utility scheme-only-dark {
    color-scheme: only dark;
}

@utility scheme-only-light {
    color-scheme: only light;
}

@utility cursor-auto {
    cursor: auto;
}

@utility cursor-default {
    cursor: default;
}

@utility cursor-pointer {
    cursor: pointer;
}

@utility cursor-wait {
    cursor: wait;
}

@utility cursor-text {
    cursor: text;
}

@utility cursor-move {
    cursor: move;
}

@utility cursor-help {
    cursor: help;
}

@utility cursor-not-allowed {
    cursor: not-allowed;
}

@utility cursor-none {
    cursor: none;
}

@utility cursor-context-menu {
    cursor: context-menu;
}

@utility cursor-progress {
    cursor: progress;
}

@utility cursor-cell {
    cursor: cell;
}

@utility cursor-crosshair {
    cursor: crosshair;
}

@utility cursor-vertical-text {
    cursor: vertical-text;
}

@utility cursor-alias {
    cursor: alias;
}

@utility cursor-copy {
    cursor: copy;
}

@utility cursor-no-drop {
    cursor: no-drop;
}

@utility cursor-grab {
    cursor: grab;
}

@utility cursor-grabbing {
    cursor: grabbing;
}

@utility cursor-all-scroll {
    cursor: all-scroll;
}

@utility cursor-col-resize {
    cursor: col-resize;
}

@utility cursor-row-resize {
    cursor: row-resize;
}

@utility cursor-n-resize {
    cursor: n-resize;
}

@utility cursor-e-resize {
    cursor: e-resize;
}

@utility cursor-s-resize {
    cursor: s-resize;
}

@utility cursor-w-resize {
    cursor: w-resize;
}

@utility cursor-ne-resize {
    cursor: ne-resize;
}

@utility cursor-nw-resize {
    cursor: nw-resize;
}

@utility cursor-se-resize {
    cursor: se-resize;
}

@utility cursor-sw-resize {
    cursor: sw-resize;
}

@utility cursor-ew-resize {
    cursor: ew-resize;
}

@utility cursor-ns-resize {
    cursor: ns-resize;
}

@utility cursor-nesw-resize {
    cursor: nesw-resize;
}

@utility cursor-nwse-resize {
    cursor: nwse-resize;
}

@utility cursor-zoom-in {
    cursor: zoom-in;
}

@utility cursor-zoom-out {
    cursor: zoom-out;
}

@utility cursor-* {
    cursor: --value([*]);
}

@utility field-sizing-fixed {
    field-sizing: fixed;
}

@utility field-sizing-content {
    field-sizing: content;
}

@utility pointer-events-auto {
    pointer-events: auto;
}

@utility pointer-events-none {
    pointer-events: none;
}

@utility resize-none {
    resize: none;
}
@utility resize {
    resize: both;
}
@utility resize-y {
    resize: vertical;
}
@utility resize-x {
    resize: horizontal;
}

@utility scroll-auto {
    scroll-behavior: auto;
}

@utility scroll-smooth {
    scroll-behavior: smooth;
}

@utility scroll-m-* {
    scroll-margin: calc(var(--spacing) * --value(number));
    scroll-margin: --value([*]);
}

@utility -scroll-m-* {
    scroll-margin: calc(var(--spacing) * ---value(number));
}

@utility scroll-mx-* {
    scroll-margin-inline: calc(var(--spacing) * --value(number));
    scroll-margin-inline: --value([*]);
}

@utility -scroll-mx-* {
    scroll-margin-inline: calc(var(--spacing) * ---value(number));
}

@utility scroll-my-* {
    scroll-margin-block: calc(var(--spacing) * --value(number));
    scroll-margin-block: --value([*]);
}

@utility -scroll-my-* {
    scroll-margin-block: calc(var(--spacing) * ---value(number));
}

@utility scroll-ms-* {
    scroll-margin-inline-start: calc(var(--spacing) * --value(number));
    scroll-margin-inline-start: --value([*]);
}

@utility -scroll-ms-* {
    scroll-margin-inline-start: calc(var(--spacing) * ---value(number));
}

@utility scroll-me-* {
    scroll-margin-inline-end: calc(var(--spacing) * --value(number));
    scroll-margin-inline-end: --value([*]);
}

@utility -scroll-me-* {
    scroll-margin-inline-end: calc(var(--spacing) * ---value(number));
}

@utility scroll-mt-* {
    scroll-margin-top: calc(var(--spacing) * --value(number));
    scroll-margin-top: --value([*]);
}

@utility -scroll-mt-* {
    scroll-margin-top: calc(var(--spacing) * ---value(number));
}

@utility scroll-mr-* {
    scroll-margin-right: calc(var(--spacing) * --value(number));
    scroll-margin-right: --value([*]);
}

@utility -scroll-mr-* {
    scroll-margin-right: calc(var(--spacing) * ---value(number));
}

@utility scroll-mb-* {
    scroll-margin-bottom: calc(var(--spacing) * --value(number));
    scroll-margin-bottom: --value([*]);
}

@utility -scroll-mb-* {
    scroll-margin-bottom: calc(var(--spacing) * ---value(number));
}

@utility scroll-ml-* {
    scroll-margin-left: calc(var(--spacing) * --value(number));
    scroll-margin-left: --value([*]);
}

@utility -scroll-ml-* {
    scroll-margin-left: calc(var(--spacing) * ---value(number));
}

@utility scroll-p-* {
    scroll-padding: calc(var(--spacing) * --value(number));
    scroll-padding: --value([*]);
}

@utility -scroll-p-* {
    scroll-padding: calc(var(--spacing) * ---value(number));
}


@utility scroll-px-* {
    scroll-padding-inline: calc(var(--spacing) * --value(number));
    scroll-padding-inline: --value([*]);
}

@utility -scroll-px-* {
    scroll-padding-inline: calc(var(--spacing) * ---value(number));
}


@utility scroll-py-* {
    scroll-padding-block: calc(var(--spacing) * --value(number));
    scroll-padding-block: --value([*]);
}

@utility -scroll-py-*  {
    scroll-padding-block: calc(var(--spacing) * ---value(number));
}


@utility scroll-ps-* {
    scroll-padding-inline-start: calc(var(--spacing) * --value(number));
    scroll-padding-inline-start: --value([*]);
}

@utility -scroll-ps-* {
    scroll-padding-inline-start: calc(var(--spacing) * ---value(number));
}

@utility scroll-pe-* {
    scroll-padding-inline-end: calc(var(--spacing) * --value(number));
    scroll-padding-inline-end: --value([*]);
}

@utility -scroll-pe-* {
    scroll-padding-inline-end: calc(var(--spacing) * ---value(number));
}

@utility scroll-pt-* {
    scroll-padding-top: calc(var(--spacing) * --value(number));
    scroll-padding-top: --value([*]);
}

@utility -scroll-pt-* {
    scroll-padding-top: calc(var(--spacing) * ---value(number));
}

@utility scroll-pr-* {
    scroll-padding-right: calc(var(--spacing) * --value(number));
    scroll-padding-right: --value([*]);
}

@utility -scroll-pr-* {
    scroll-padding-right: calc(var(--spacing) * ---value(number));
}

@utility scroll-pb-* {
    scroll-padding-bottom: calc(var(--spacing) * --value(number));
    scroll-padding-bottom: --value([*]);
}

@utility -scroll-pb-* {
    scroll-padding-bottom: calc(var(--spacing) * ---value(number));
}

@utility scroll-pl-* {
    scroll-padding-left: calc(var(--spacing) * --value(number));
    scroll-padding-left: --value([*]);
}

@utility -scroll-pl-* {
    scroll-padding-left: calc(var(--spacing) * ---value(number));
}

@utility snap-start {
    scroll-snap-align: start;
}

@utility snap-end {
    scroll-snap-align: end;
}

@utility snap-center {
    scroll-snap-align: center;
}

@utility snap-align-none {
    scroll-snap-align: none;
}

@utility snap-normal {
    scroll-snap-stop: normal;
}

@utility snap-always {
    scroll-snap-stop: always;
}

@utility snap-none {
    scroll-snap-type: none;
}

@utility snap-x {
    scroll-snap-type: x var(--tw-scroll-snap-strictness);
}
@utility snap-y {
    scroll-snap-type: y var(--tw-scroll-snap-strictness);
}
@utility snap-both {
    scroll-snap-type: both var(--tw-scroll-snap-strictness);
}
@utility snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
}
@utility snap-proximity {
    --tw-scroll-snap-strictness: proximity;
}

@utility touch-auto {
    touch-action: auto;
}
@utility touch-none {
    touch-action: none;
}
@utility touch-pan-x {
    touch-action: pan-x;
}
@utility touch-pan-left {
    touch-action: pan-left;
}
@utility touch-pan-right {
    touch-action: pan-right;
}
@utility touch-pan-y {
    touch-action: pan-y;
}
@utility touch-pan-up {
    touch-action: pan-up;
}
@utility touch-pan-down {
    touch-action: pan-down;
}
@utility touch-pinch-zoom {
    touch-action: pinch-zoom;
}
@utility touch-manipulation {
    touch-action: manipulation;
}

@utility select-none {
    user-select: none;
}
@utility select-text {
    user-select: text;
}
@utility select-all {
    user-select: all;
}
@utility select-auto {
    user-select: auto;
}

@utility will-change-auto {
    will-change: auto;
}
@utility will-change-scroll {
    will-change: scroll-position;
}
@utility will-change-contents {
    will-change: contents;
}
@utility will-change-transform {
    will-change: transform;
}
@utility will-change-* {
    will-change: --value([*]);
}

@utility fill-* {
    fill: --value("none", --color-*);
}

@utility stroke-* {
    stroke: --value("none", --color-*);
}

@utility stroke-* {
    stroke-width: --value(number);
    stroke-width: --value([*]);
}

@utility forced-color-adjust-auto {
    forced-color-adjust: auto;
}
@utility forced-color-adjust-none {
    forced-color-adjust: none;
}
